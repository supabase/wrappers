[package]
name = "wrappers"
version = "0.5.4"
publish = false
homepage = "https://github.com/supabase/wrappers/tree/main/wrappers"
repository = "https://github.com/supabase/wrappers/tree/main/wrappers"
edition = { workspace = true }
rust-version = { workspace = true }

[lib]
crate-type = ["cdylib", "lib"]

[[bin]]
name = "pgrx_embed_wrappers"
path = "./src/bin/pgrx_embed.rs"

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(pgrx_embed)'] }

[features]
default = ["pg15"]
pg13 = ["pgrx/pg13", "pgrx-tests/pg13", "supabase-wrappers/pg13"]
pg14 = ["pgrx/pg14", "pgrx-tests/pg14", "supabase-wrappers/pg14"]
pg15 = ["pgrx/pg15", "pgrx-tests/pg15", "supabase-wrappers/pg15"]
pg16 = ["pgrx/pg16", "pgrx-tests/pg16", "supabase-wrappers/pg16"]
pg17 = ["pgrx/pg17", "pgrx-tests/pg17", "supabase-wrappers/pg17"]
pg18 = ["pgrx/pg18", "pgrx-tests/pg18", "supabase-wrappers/pg18"]
pg_test = []

helloworld_fdw = []
bigquery_fdw = [
    "gcp-bigquery-client",
    "serde_json",
    "serde",
    "wiremock",
    "futures",
    "yup-oauth2",
    "thiserror",
]
clickhouse_fdw = [
    "clickhouse-rs",
    "chrono",
    "chrono-tz",
    "regex",
    "thiserror",
    "either",
    "uuid",
]
stripe_fdw = [
    "http",
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "serde_json",
    "thiserror",
    "url",
]
firebase_fdw = [
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "serde_json",
    "yup-oauth2",
    "regex",
    "thiserror",
]
s3_fdw = [
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "aws-config",
    "aws-sdk-s3",
    "tokio",
    "tokio-util",
    "csv",
    "async-compression",
    "serde_json",
    "http",
    "parquet",
    "futures",
    "arrow-array",
    "chrono",
    "thiserror",
]
s3vectors_fdw = [
    "aws-config",
    "aws-sdk-s3",
    "aws-sdk-s3vectors",
    "aws-smithy-types",
    "aws-smithy-async",
    "serde",
    "serde_json",
    "thiserror",
]
airtable_fdw = [
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "serde_json",
    "serde",
    "url",
    "thiserror",
]
cognito_fdw = [
    "aws-sdk-cognitoidentityprovider",
    "aws-config",
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "http",
    "serde_json",
    "tokio",
    "serde",
    "url",
    "thiserror",
]
logflare_fdw = [
    "http",
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "serde_json",
    "thiserror",
    "url",
]
auth0_fdw = [
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "http",
    "serde_json",
    "serde",
    "url",
    "thiserror",
]
mssql_fdw = [
    "tiberius",
    "tokio",
    "tokio-util",
    "num-traits",
    "thiserror",
]
redis_fdw = [
    "redis",
    "serde_json",
    "thiserror",
]
wasm_fdw = [
    "wasmtime",
    "warg-client",
    "warg-protocol",
    "chrono",
    "dirs",
    "sha2",
    "hex",
    "thiserror",
    "anyhow",
    "reqwest",
    "reqwest-middleware",
    "reqwest-retry",
    "semver",
    "serde",
    "serde_json",
    "jwt-simple",
    "bytes",
    "uuid",
]
iceberg_fdw = [
    "iceberg",
    "iceberg-catalog-rest",
    "iceberg-catalog-s3tables",
    "arrow-array",
    "arrow-schema",
    "arrow-json",
    "chrono",
    "futures",
    "parquet",
    "rust_decimal",
    "serde_json",
    "thiserror",
    "uuid",
]
duckdb_fdw = [
    "arrow-array",
    "arrow-schema",
    "arrow-json",
    "chrono",
    "duckdb",
    "regex",
    "serde_json",
    "thiserror",
    "uuid",
]
# Does not include helloworld_fdw because of its general uselessness
native_fdws = [
    "airtable_fdw",
    "bigquery_fdw",
    "clickhouse_fdw",
    "stripe_fdw",
    "firebase_fdw",
    "s3_fdw",
    "logflare_fdw",
    "auth0_fdw",
    "mssql_fdw",
    "redis_fdw",
    "cognito_fdw",
    "iceberg_fdw",
    "duckdb_fdw",
]
all_fdws = [
    "native_fdws",
    "wasm_fdw",
]

[dependencies]
pgrx = { version = "=0.16.0" }
#supabase-wrappers = "0.1"
supabase-wrappers = { path = "../supabase-wrappers", default-features = false }

# Rustls is shared by some other dependencies but not directly used by Wrappers.
# Since Rustls 0.22, it is required to choose the provider of the cryptographic
# primitives at start.
# ref: https://docs.rs/rustls/latest/rustls/index.html#cryptography-providers
rustls = "0.23.27"

# for clickhouse_fdw
clickhouse-rs = { git = "https://github.com/burmecia/clickhouse-rs.git", branch = "supabase-patch", features = [
    "tls",
], optional = true }
chrono = { version = "0.4", optional = true }
chrono-tz = { version = "0.6", optional = true }
either = { version = "1.12.0", optional = true }

# for bigquery_fdw, firebase_fdw, airtable_fdw and etc.
gcp-bigquery-client = { version = "0.25.1", optional = true }
serde = { version = "1", optional = true }
serde_json = { version = "1.0.86", optional = true }
wiremock = { version = "0.5", optional = true }
futures = { version = "0.3", optional = true }

# for stripe_fdw, firebase_fdw, logflare_fdw and etc.
reqwest = { version = "0.11.20", features = ["json", "gzip"], optional = true }
reqwest-middleware = { version = "0.2.3", optional = true }
reqwest-retry = { version = "0.2.2", optional = true }

# for firebase_fdw
yup-oauth2 = { version = "11.0.0", optional = true }
regex = { version = "1", optional = true }

# for airtable_fdw, stripe_fdw
url = { version = "2.3", optional = true }

# for s3_fdw and s3vectors_fdw
aws-config = { version = "1.8.6", features = ["behavior-version-latest"], optional = true }

# for s3_fdw
aws-sdk-s3 = { version = "1.86.0", optional = true }

# for s3vectors_fdw
aws-sdk-s3vectors = { version = "1.8.0", optional = true }
aws-smithy-types = { version = "1.3.2", optional = true }
aws-smithy-async = { version = "1.2.5", optional = true }

# for cognito fdw
aws-sdk-cognitoidentityprovider = { version ="1.60.0", optional = true }

csv = { version = "1.2", optional = true }
tokio = { version = "1", features = ["full"], optional = true }
tokio-util = { version = "0.7", features = ["full"], optional = true }
async-compression = { version = "0.3.15", features = [
    "tokio",
    "bzip2",
    "gzip",
    "xz",
    "zlib",
], optional = true }
http = { version = "0.2", optional = true }
parquet = { version = "55.1.0", features = ["async"], optional = true }
arrow-array = { version = "55.1.0", optional = true }
arrow-schema = { version = "55.1.0", optional = true }
arrow-json = { version = "55.1.0", optional = true }

# for mssql_fdw
tiberius = { version = "0.12.2", features = [
    "tds73",
    "native-tls",
    "chrono",
    "rust_decimal",
], optional = true }
num-traits = { version = "0.2.17", optional = true }

# for redis_fdw
redis = { version = "0.27.5", features = ["streams", "tls-rustls", "tls-rustls-insecure"], optional = true }

# for wasm_fdw
wasmtime = { version = "32.0.0", features = [
    "runtime",
    "cranelift",
    "component-model",
], default-features = false, optional = true }
warg-client = { version = "0.7.0", optional = true }
warg-protocol = { version = "0.7.0", optional = true }
semver = { version = "1.0.23", optional = true }
jwt-simple = { version = "0.12.9", default-features = false, features = [
    "pure-rust"
], optional = true }
dirs = { version = "5.0.1", optional = true }
sha2 = { version = "0.10.8", optional = true }
hex = { version = "0.4.3", optional = true }
bytes = { version = "1.9.0", optional = true }
thiserror = { version = "1.0.48", optional = true }
anyhow  = { version = "1.0.81", optional = true }
uuid = { version = "1.18.0", features = ["v7"], optional = true }

# for iceberg_fdw
iceberg = { version = "0.6.0", optional = true }
iceberg-catalog-s3tables = { git = "https://github.com/burmecia/iceberg-rust", rev = "6548db2cc02b8ecd65e698e58d372d7dfb342b9c", package="iceberg-catalog-s3tables", optional = true }
iceberg-catalog-rest = { version = "0.6.0", optional = true }
rust_decimal = { version = "1.37.1", optional = true }

# for duckdb_fdw
duckdb = { version = "1.3.2", features = ["bundled"], optional = true }

[dev-dependencies]
pgrx-tests = "=0.16.0"
